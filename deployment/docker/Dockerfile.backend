# Multi-stage build for Python backend with Rust components
FROM rust:1.70 as rust-builder

WORKDIR /app

# Copy Rust components
COPY backend/device_executor/ ./device_executor/
COPY Cargo.toml Cargo.lock ./

# Build Rust components
RUN cd device_executor && cargo build --release

# Python backend stage
FROM python:3.11-slim

WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    libpq-dev \
    && rm -rf /var/lib/apt/lists/*

# Copy Python requirements
COPY backend/requirements.txt ./
COPY setup.py ./
COPY pytest.ini ./

# Install Python dependencies
RUN pip install --no-cache-dir -r requirements.txt

# Copy backend source code
COPY backend/ ./backend/

# Copy built Rust binaries
COPY --from=rust-builder /app/target/release/ ./backend/device_executor/target/release/

# Create non-root user
RUN useradd --create-home --shell /bin/bash app && \
    chown -R app:app /app

USER app

# Expose backend port
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

CMD ["python", "-m", "backend.main"]